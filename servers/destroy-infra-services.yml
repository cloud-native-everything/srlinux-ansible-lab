
  - name: check if dns-server was previously created
    command: docker ps --format \'\{\{.Names\}\}\'
    register: docker_ps
    changed_when: False

  - name: Stop container ntp-server container
    command: docker stop ntp-server
    when:
      - '"ntp-server" in docker_ps.stdout'

  - name: Stop container dns-server container
    command: docker stop dns-server
    when:
      - '"dns-server" in docker_ps.stdout'

  - name: check if dns-server is still there
    command: docker ps --all --format \'\{\{.Names\}\}\'
    register: docker_ps
    changed_when: False

  - name: REMOVE container dns-server container
    command: docker rm dns-server
    when:
      - '"dns-server" in docker_ps.stdout'

#  - name: Check ntp-dns-net network
#    shell: "docker network ls | awk '{ print $2 } '"
#    register: docker_net
#    changed_when: False

#  - name: REMOVE dns and ntp service NETWORK
#    command: docker network rm ntp-dns-net
#    when:
#      - '"ntp-dns-net" in docker_net.stdout'

  - name: check bind9 image was created previously
    command: docker images bind9
    register: docker_images
    changed_when: False

  - name: Destroy image bind9 
    command: docker rmi bind9
    when: 
      - '"bind9" in docker_images.stdout'
      - '"yes" not in keep_infra_images'

  - name: check if squid-server was previously created
    command: docker ps --format \'\{\{.Names\}\}\'
    register: docker_ps
    changed_when: False

  - name: Stop container squid-server container
    command: docker stop squid-server
    when:
      - '"squid-server" in docker_ps.stdout'

  - name: check if squid-server is still there
    command: docker ps --all --format \'\{\{.Names\}\}\'
    register: docker_ps
    changed_when: False

  - name: REMOVE container squid-server container
    command: docker rm squid-server
    when:
      - '"squid-server" in docker_ps.stdout'

  - name: check squid image was created previously
    command: docker images squid
    register: docker_images
    changed_when: False

  - name: Destroy image squid
    command: docker rmi squid
    when:
      - '"squid" in docker_images.stdout'
      - '"yes" not in keep_infra_images'
 
  - name: Destroy files for dns server
    file:
      path: "/tmp/{{ item }}"
      state: absent
    with_items:
      - 'named.conf.options'
      - 'named.conf.local'
      - 'db.srl.nokialab.net'
      - 'Dockerfile.bind'
      - 'Dockerfile.squid'
